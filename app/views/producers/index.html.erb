<h1>Producers</h1>

<%= link_to "create producer", new_producer_path %>

<div class="container">
  <div class="row">
    <% @producers.each do |producer| %>
      <%= display_producer_card(producer) %>
    <% end %>
  </div>
</div>

<div id="map" style="width: 100%; height: 300px;"></div>

<% content_for(:after_js) do %>
  <script>
    $(document).ready(function() {

      // MAP DISPLAY
      var handler = Gmaps.build('Google');
      handler.buildMap({ internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(14);
        }
      });

      // CURRENT USER NAVIGATOR GEOLOCATION
      <% if params[:latitude].blank? && params[:location].blank? %>

      //Options for geolocation : accuracy = position calculation accuracy, request timeout delay, maximumAge : maximum age of cache position
        var options = {
          enableHighAccuracy: true,
          timeout: 5000,
          maximumAge: 0
        };

        // success function for geolocation
        function success(pos) {
          var latitude = pos.coords.latitude
          var longitude = pos.coords.longitude
          console.log('<%= producers_path %>?latitude='+latitude+'&longitude='+longitude)
          window.location.href = 'http://localhost:3000/producers?latitude='+latitude+'&longitude='+longitude;
          // Latitude @ Longitude sent to URL via line above. These can be hidden from URL via AJAX request below (uncomment applicable option) :
          // $.ajax({
          //   type: 'GET',
          //   url: 'http://localhost:3000/producers?latitude='+latitude+'&longitude='+longitude,
          //   success: function(response) {
          //     // console.log('<%= producers_path %>?latitude='+latitude+'&longitude='+longitude)
          //   }
          // });
        };

        // ERROR MANAGEMENT
        function error(error) {
          console.warn(`ERROR(${error.code}): ${error.message}`);
          if (error.code ==  error.PERMISSION_DENIED) {
            var alternative_location = prompt("Location access denied, may you indicate your current location (eg. city) ?");
          }
          if (error.code == error.POSITION_UNAVAILABLE) {
            var alternative_location = prompt("Your position in unavailable, may you indicate it (eg. city)?");
          }
          if (error.code == error.TIMEOUT) {
            var alternative_location = prompt("Geolocation process timed out, may you indicate your current location (eg. city) ?");
          }
          if (error.code == error.UNKNOWN_ERROR) {
            var alternative_location = prompt("An unknown error occurred, may you indicate your current location (eg. city) ?");
          }
          window.location.href = 'http://localhost:3000/producers?location='+alternative_location;
        };
        navigator.geolocation.getCurrentPosition(success, error, options);

      <% end %>

      //CALCULATE DRIVING TIME TO PRODUCERS
       <% unless params[:latitude].blank? && params[:location].blank? %>

        <% destinations_producers = @producers.map do |producer| %>
         <% "#{producer.latitude}, #{producer.longitude}" %>
        <% end %>

        <% if params[:latitude].blank? %>
          <% origin_ruby = ["#{params[:location]}"] %>
        <% else %>
          <% origin_ruby = ["#{params[:latitude]}, #{params[:longitude]}"] %>
        <% end %>

        var service = new google.maps.DistanceMatrixService();
        // REQUEST TO GOOGLE API with origin, destinations and options, DOM modified in callback function
        service.getDistanceMatrix(
          {
            origins: <%= raw origin_ruby %>,
            destinations: <%= raw destinations_producers %>,
            travelMode: 'DRIVING',
            avoidHighways: false,
            avoidTolls: false,
          }, callback);

        function callback(response, status) {
          if (status == 'OK') {
            var origin = response.originAddresses[0];
            var destinations = response.destinationAddresses;
            var results = response.rows[0].elements;

            for (var i = 0; i < results.length; i++) {
              var element = results[i];
              var distance = element.distance.text;
              var duration = element.duration.text;
              console.log(duration);
              $('.producer-card-location').eq(i).append($('<span>').text(duration));
              var from = origin[0];
              var to = destinations[i];
            }
          }
        }
       <% end %>

    });
  </script>
<% end %>
